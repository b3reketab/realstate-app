// Prisma schema using UUID-like strategy while maintaining MongoDB compatibility

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Post {
  id         String      @id @default(uuid()) @map("_id")
  title      String
  price      Int
  images     String[]
  address    String
  city       String
  bedroom    Int
  bathroom   Int
  latitude   String
  longitude  String
  type       Type
  property   Property
  createdAt  DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id])
  userId     String
  postDetail PostDetail?
  savedPosts SavedPost[]
}

enum Type {
  buy
  rent
}

enum Property {
  apartment
  house
  condo
  land
}

model PostDetail {
  id         String  @id @default(uuid()) @map("_id")
  desc       String
  utilities  String?
  pet        String?
  income     String?
  size       Int?
  school     Int?
  bus        Int?
  restaurant Int?
  post       Post    @relation(fields: [postId], references: [id])
  postId     String  @unique
}

model SavedPost {
  id        String   @id @default(uuid()) @map("_id")
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  userId    String
  postId    String
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}

model User {
  id         String      @id @default(uuid()) @map("_id")
  email      String      @unique
  username   String      @unique
  password   String
  avatar     String?
  createdAt  DateTime    @default(now())
  posts      Post[]
  savedPosts SavedPost[]
  chats      Chat[]      @relation(fields: [chatIDs], references: [id])
  chatIDs    String[]
}

model Chat {
  id          String    @id @default(uuid()) @map("_id")
  users       User[]    @relation(fields: [userIDs], references: [id])
  userIDs     String[]
  createdAt   DateTime  @default(now())
  seenBy      String[]
  messages    Message[]
  lastMessage String?
}

model Message {
  id        String   @id @default(uuid()) @map("_id")
  text      String
  userId    String
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    String
  createdAt DateTime @default(now())
}